spring.application.name=order-service
spring.cloud.config.uri=http://localhost:8888
server.port=0
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
management.endpoints.web.exposure.include=*

#spring.profiles.active=default
spring.cloud.vault.host=0.0.0.0
#spring.cloud.vault.kvVersion=1
spring.cloud.vault.generic.backend=kv
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.port=8200
spring.cloud.vault.scheme=http
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=myroot
spring.cloud.vault.application-name=${spring.application.name}
spring.cloud.loadbalancer.ribbon.enabled=false

#to refresh config changes through spring bus
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/microservices-realm

#name of the binding notificationEventSupplier
# `notification-events` should be same name as in the notification service property :
# spring.cloud.stream.bindings.notificationEventSupplier-in-0.destination

spring.cloud.stream.bindings.notificationEventSupplier-out-0.destination=notification-events
spring.cloud.stream.source=notificationEventSupplier

# Casting to TraceableCircuitBreaker will be thrown
spring.sleuth.circuitbreaker.enabled=false

# to make log traceable through async calls via messaging need to enable following property
# make change in order controller
spring.sleuth.integration.enabled=true

spring.zipkin.base-url=http://localhost:9411/
spring.sleuth.sampler.probability=1
logging.level.org.springframework.security= DEBUG
